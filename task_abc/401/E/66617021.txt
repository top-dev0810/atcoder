#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using pii = pair<int, int>;
const ll mod = 1e9 + 7;
const int N = 200005;
vector<int> g[N];
int p[N], sz[N];
bool vis[N];
int find(int node) { return node == p[node] ? node : p[node] = find(p[node]); }
void solve() {
    int n, m, a, b;
    cin >> n >> m;
    iota(p, p + n + 1, 0), fill(sz, sz + n + 1, 1);
    for (int i = 0; i < m; i++) {
        cin >> a >> b;
        g[b].push_back(a), g[a].push_back(b);
    }
    int ans = 0;
    for (int i = 1; i <= n; i++) {
        if (vis[i]) vis[i] = false, ans--;
        for (int nxt : g[i])
            if (nxt > i) {
                if (!vis[nxt]) vis[nxt] = true, ans++;
            } else {
                b = find(nxt);
                if (i != b) {
                    sz[i] += sz[b];
                    p[b] = i;
                }
            }
        cout << (sz[i] == i ? ans : -1) << '\n';
    }
}
int main() {
    cin.tie(0)->sync_with_stdio(0);
    solve();
    return 0;
}