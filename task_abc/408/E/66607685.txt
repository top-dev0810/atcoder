#include <bits/stdc++.h>
using namespace std;
#define int long long
int n,m,id,ans;
struct node{
	int a,d;
};
vector<node> v[200005];
bool b[200005];
bool bfs(int x){
	queue<int> q;
	q.push(x);
	memset(b,0,sizeof(b));
	b[1]=1;
//	cout<<ans<<'\n';
	while (!q.empty()){
		int dx=q.front();
		q.pop();
		if (dx==n){
			return 1;
		}
		for (auto i:v[dx]){
//			cout<<i.a<<' '<<dx<<' '<<(i.d|id)<<' '<<i.d+id<<'\n';
			if ((i.d|id)==i.d+id&&b[i.a]==0){
				q.push(i.a);
				b[i.a]=1;
			}
		}
	} 
	return 0;
}
signed main(){
	cin>>n>>m;
	for (int i=1;i<=m;i++){
		int x,y,z;
		cin>>x>>y>>z;
		v[x].push_back({y,z});
		v[y].push_back({x,z});
	}
	for (int i=30;i>=0;i--){
		id=id|(1ll<<i);
		if (bfs(1)){
		}
		else{
			ans|=(1ll<<i);
			id=id^(1ll<<i);
		}
	}
	cout<<ans<<'\n';
	return 0;
}