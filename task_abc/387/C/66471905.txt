#include <bits/stdc++.h>
using namespace std;
using i64 = long long;
using i128 = __int128;
#define sz(x) (int)x.size()
#define all(v) v.begin(), v.end()
#define ps(y) cout << fixed << setprecision(y)
/*
 /\_/\              
( o.o )     /\_/\   
 > ^ <     ( o.o )    
            > ^ <   

 /\_/\      /\_/\  
( o.o )    ( o.o )  
 > ^ <      > ^ <       
*/
#define N 20
i64 dp[N][N][2];
i64 calc(i64 v){
	vector<int> digs;
	while(v) 
	{
		digs.push_back(v%10);
		v/=10;
	}
	memset(dp,0,sizeof(dp));
	dp[digs.size()][0][0]=1;
	for(int i=digs.size()-1;i>=0;i--){
		dp[i][0][1]=dp[i+1][0][0]+dp[i+1][0][1];
		for(int j=0;j<=9;j++){
			if(j>0){
				if(j<=digs[i]) dp[i][j][j<digs[i]]+=dp[i+1][0][0];
				dp[i][j][1]+=dp[i+1][0][1];
			}
			for(int k=j+1;k<10;k++){
				if(j<=digs[i]) dp[i][k][j<digs[i]]+=dp[i+1][k][0];
				dp[i][k][1]+=dp[i+1][k][1];
			}
		}
	}
	i64 ret=0;
	for(int i=1;i<=10;i++) ret+=dp[0][i][0]+dp[0][i][1];
		return ret;
}
void solve()
{
	i64 l,r;
	cin>>l>>r;
	cout<<calc(r)-calc(l-1)<<'\n';

}
int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	int T=1;
    //cin >> T;
	while (T--)
	{
		solve();
	}
	return 0;
}