#include <bits/stdc++.h>
#define ll long long
using namespace std;

void solve(ll n, vector<vector<ll>> points) {
    map<pair<ll, ll>, ll> m;
    map<array<ll, 3>, ll> parallel;
    for (int i=0; i<n; i++) {
        for (int j=i+1; j<n; j++) {
            int num = -(points[j][1] - points[i][1]);
            int den = points[j][0] - points[i][0];
            ll len = (num*num) + (den*den);
            int g = __gcd(abs(num), abs(den));
            num /= g;
            den /= g;
            if (den<0) {
                num *= -1;
                den = abs(den);
            } else if (den==0) {
                num = 1;
            }
            if (num==0) {
                den = 1;
            }
            m[{num, den}]++;
            parallel[{num, den, len}]++;
        }
    }
    
    ll count = 0;
    ll p_count = 0;
    for (auto e: m) {
        count += ((e.second)*(e.second - 1))/2;
    }
    
    for(auto e: parallel) {
        p_count += ((e.second)*(e.second - 1))/2;
    }
    
    cout << count-p_count/2 << "\n";
}

int main() {
    ll n;
    cin >> n;
    vector<vector<ll>> points(n, vector<ll>(2, 0));
    for (int i=0; i<n; i++) {
        cin >> points[i][0] >> points[i][1];
    }
    solve(n, points);
}
