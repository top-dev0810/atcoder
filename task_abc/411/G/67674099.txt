#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using a2 = array<ll, 2>;
using a3 = array<ll, 3>;

template <typename A>
void chmin(A &l, const A &r) {
    if (r < l)
        l = r;
}
template <typename A>
void chmax(A &l, const A &r) {
    if (l < r)
        l = r;
}

ll mod = 998244353;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);

    ll n, m;
    cin >> n >> m;
    vector<vector<ll>> edge(n, vector<ll>(n, 0));

    for (int i = 0; i < m; i++) {
        ll a, b;
        cin >> a >> b;
        a--;
        b--;
        edge[a][b]++;
        edge[b][a]++;
    }

    vector<vector<ll>> dp((1 << n), vector<ll>(n, 0));

    for (int i = 0; i < n; i++) {
        dp[(1 << i)][i] = 1;
    }

    for (int i = 0; i < (1 << n); i++) {
        ll mx = 0;
        for (int j = 0; j < n; j++) {
            if ((i >> j) & 1)
                mx = j;
        }
        for (int j = 0; j <= mx; j++) {
            for (int k = 0; k <= mx; k++) {
                if ((i >> k) & 1)
                    continue;
                dp[i | (1 << k)][k] += dp[i][j] * edge[j][k];
                dp[i | (1 << k)][k] %= mod;
            }
        }
    }

    ll ans = 0;

    for (int i = 0; i < (1 << n); i++) {
        if (popcount((unsigned)i) >= 3) {
            ll mx = 0;
            for (int j = 0; j < n; j++) {
                if ((i >> j) & 1)
                    mx = j;
            }
            for (int j = 0; j < n; j++) {
                ans += dp[i][j] * edge[j][mx];
                ans %= mod;
            }
        }
    }

    ans *= (mod + 1) / 2;
    ans %= mod;

    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            ans += edge[i][j] * (edge[i][j] - 1) / 2;
            ans %= mod;
        }
    }

    cout << ans << endl;

    return 0;
}
