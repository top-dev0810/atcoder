#include <bits/stdc++.h>
using namespace std;
using ll  = long long;
using ld  = long double;
using pii = pair<int, int>;
using pll = pair<ll, ll>;
using vi  = vector<int>;
using vl  = vector<ll>;
using vii = vector<pii>;

const ll INF = 2e+9;
const ll MOD = 998244353;
const int MAXN = 1e+5;
#define EPS 1e-9

int mod_inv(int x, int m) {
  int b1 = 0, b2 = 1, mod = m;
  while (x > 1) {
    int q = m / x, oldb = b2, oldm = m;
    m = x, x = oldm % x, b2 = b1 - q * b2, b1 = oldb;
  }
  return (b2 + mod) % mod;
}

void solve() {
  int n;
  cin >> n;
  map<int, vi> mp;
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < 6; j++) {
      int x; cin >> x;
      mp[x].push_back(i);
    }
  }
  vi dp(n, 6);
  ll ans = mp.rbegin()->first, p = 1;
  for (auto it = mp.rbegin(); it != mp.rend();) {
    int prev = it->first;
    for (auto x : it->second)
      p = p * mod_inv(dp[x], MOD) % MOD * --dp[x] % MOD;
    it++;
    ans += (it->first - prev + MOD) * p % MOD;
    ans %= MOD;
  } 
  cout << ans << endl;
}

 
int main() {
  cin.sync_with_stdio(false);
  cin.tie(0);
  solve();
  return EXIT_SUCCESS;
}