#include <bits/stdc++.h>
#define fi first
#define se second
#define eb(x) emplace_back(x)
#define pb(x) push_back(x)
#define lc(x) (tr[x].ls)
#define rc(x) (tr[x].rs)
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ldb;
using pi=pair<int,int>;
const int N=200005;
const ll mod=998244353;
ll n,k,p[N],ans,nxd[N],tot;
int lowbit(int x)
{
    return (x&(-x));
}
struct BIT{
    int tr[N];
    void update(int p,int v)
    {
        while(p<=n)
        {
            tr[p]+=v;
            p+=lowbit(p);
        }
    }
    int query(int p)
    {
        int res=0;
        while(p)
        {
            res+=tr[p];
            p-=lowbit(p);
        }
        return res;
    }
}tr1,tr2;
ll qpow(ll a,ll b)
{
    ll res=1;
    while(b)
    {
        if(b&1)res=(res*a)%mod;
        a=(a*a)%mod;
        b>>=1;
    }
    return res;
}
int main()
{
    //freopen("sample.in","r",stdin);
    //freopen("sample.out","w",stdout);
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    cin>>n>>k;
    for(int i=1;i<=n;i++)
    {
        cin>>p[i];
        tot+=i-1-tr1.query(p[i]);
        tr1.update(p[i],1);
        if(i-k>=1)
        {
            tr2.update(p[i-k],-1);
            nxd[max(1ll,i-k+1)]-=tr2.query(p[i-k]);
        }
        nxd[max(1ll,i-k+1)]+=nxd[max(1ll,i-k+1)-1];
        nxd[max(1ll,i-k+1)]+=(i-max(1ll,i-k+1))-tr2.query(p[i]);
        tr2.update(p[i],1);
    }
    ll en=(1ll*k*(k-1)%mod*qpow(4,mod-2))%mod;
    for(int i=1;i<=n-k+1;i++)
        ans=(ans+(qpow(n-k+1,mod-2)*((tot-nxd[i]+en)%mod)%mod))%mod;
    cout<<ans;
    return 0;
}