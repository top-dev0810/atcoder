#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll inf=1e18;
const int maxn=2e5+5;
int n,k;
ll a[maxn],dp[maxn][6][3];
vector<int>g[maxn];
void dfs(int u,int fa){
	dp[u][0][0]=0;
	dp[u][1][1]=dp[u][1][2]=a[u];
	for(auto v:g[u]){
		if(v==fa) continue;
		dfs(v,u);
	}
	for(auto v:g[u]){
		if(v==fa) continue;
		for(int i=k;i>=0;i--){
			for(int j=0;j<=i;j++){
				dp[u][i][0]=max(dp[u][i][0],dp[u][i-j][0]+max(dp[v][j][0],max(dp[v][j][1],dp[v][j][2])));
				dp[u][i][1]=max(dp[u][i][1],dp[u][i-j][1]+max(dp[v][j][0],max(dp[v][j][1],dp[v][j][2])));
				dp[u][i][2]=max(dp[u][i][2],dp[u][i-j][2]+max(dp[v][j][0],max(dp[v][j][1],dp[v][j][2])));
				dp[u][i][1]=max(dp[u][i][1],dp[u][i-j][0]+dp[v][j][1]+a[u]);
				dp[u][i][2]=max(dp[u][i][2],dp[u][i-j][1]+dp[v][j+1][1]);
			}
		}
	}
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cin>>n>>k;
	for(int i=1;i<=n;i++) cin>>a[i];
	for(int i=1;i<n;i++){
		int u,v;
		cin>>u>>v;
		g[u].push_back(v);
		g[v].push_back(u);
	}
	for(int i=1;i<=n;i++){
		for(int j=0;j<=k;j++){
			dp[i][j][0]=dp[i][j][1]=dp[i][j][2]=-inf;
		}
	} 
	dfs(1,0);
	ll ans=-inf;
	for(int i=0;i<=k;i++) ans=max(ans,max(dp[1][i][0],max(dp[1][i][1],dp[1][i][2])));
	cout<<ans<<endl;
	return 0;
}