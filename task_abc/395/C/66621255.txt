#include <bits/stdc++.h>

using namespace std;

#define int_32 int
#define int long long

#define pii pair<int, int>
#define vpii vector<pii>
#define vi vector<int>
#define vvi vector<vi>
#define mii map<int, int>
#define umii unordered_map<int, int>

#define all(x) (x).begin(), (x).end()
// #define size(x) (x).size()

#define F first 
#define S second 

#define endl '\n'
#define pb push_back

const int MOD = 1e9 + 7;
const int INF = 1e18-1;

void fast_io(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
}
bool isPrime(int n) {
    if (n < 2) return false;        
    if (n == 2 || n == 3) return true; 
    if (n % 2 == 0 || n % 3 == 0) return false; 

    for (int i = 5; i * i <= n; i += 6) {
        if (n % i == 0 || n % (i + 2) == 0)  return false;
    }
    return true;
}

bool isPrefix(const string &s, const string &prefix) {
    if (s.size() < prefix.size()) return false;
    return s.substr(0, prefix.size()) == prefix;
}

bool isSuffix(const string &s, const string &suffix) {
    if (s.size() < suffix.size()) return false;
    return s.substr(s.size() - suffix.size()) == suffix;
}

int a[10000005];

void fnc() {
    
    for (int i = 0; i < 10000000; i++){
        a[i] = -1;
    }

    int n;
    cin >> n;

    vector <int> v(n);

    for (int i = 0; i < n; i++){
        cin >> v[i];
    }

    int res = 1e9;
    
    for (int i = 0; i < n; i++){
        if (a[v[i]] == -1){
            a[v[i]] = i;
        }
        else{
            res = min(res, (i - a[v[i]] + 1));
            a[v[i]] = i;
        }
    }

    if (res == 1e9){
        cout << "-1";
        return;
    }

    cout << res;
    return;
}


signed main() {
    fast_io();

    int t;
    t = 1;

    while (t--) {
        fnc();
    }
    
    return 0;
}  