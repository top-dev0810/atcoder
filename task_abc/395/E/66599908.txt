#include<bits/stdc++.h>
using namespace std;
long long n,m,x,v,u;
vector<long long> ve[2][200005];
bool vis[200005][2];
struct node{
	long long id,fl,ans;
	bool operator<(node b)const{
		return ans>b.ans;
	}
};
priority_queue<node> q;
int main(){
	cin>>n>>m>>x;
	for(int i=1;i<=m;i++){
		cin>>u>>v;
		ve[0][v].push_back(u);
		ve[1][u].push_back(v);
	}
	q.push({1,1,0});
	while(!q.empty()){
		node G=q.top();q.pop();
		if(G.id==n){
			cout<<G.ans;
			return 0;
		}
		if(vis[G.id][G.fl]) continue;
		vis[G.id][G.fl]=1;
		for(int i=0;i<ve[G.fl^1][G.id].size();i++){
			q.push({ve[G.fl^1][G.id][i],G.fl^1,G.ans+1+x});
		}
		for(int i=0;i<ve[G.fl][G.id].size();i++){
			q.push({ve[G.fl][G.id][i],G.fl,G.ans+1});
		}
	}
	return 0;
}