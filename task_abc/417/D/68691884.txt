#include <bits/stdc++.h>
// #include <bits/extc++.h>
#define debug(x) cerr << #x << ": " << x << '\n';
// using namespace __gnu_pbds;
using namespace std;
using db = double;
using ll = long long;
using ld = long double;
using i128 = __int128_t;
using u32 = unsigned int;
using pll = pair <ll, ll>;
using pii = pair <int, int>;
using ull = unsigned long long;
constexpr db EPS = 1e-9;
constexpr int N = 1e6 + 5, MOD = 1e9 + 7;
mt19937_64 rnd (chrono::steady_clock::now().time_since_epoch().count());
struct node {
    int p, x, y;
};
void isac()
{
    int n;
    cin >> n;
    
    vector <node> a (n + 1);
    for (int i = 1; i <= n; i ++) {
        cin >> a[i].p >> a[i].x >> a[i].y;
    }  

    vector <vector<int>> f (n + 1, vector<int>(1001, -1));
    for (int i = 0; i <= 1000; i ++) {
        if (a[n].p >= i) {
            f[n][i] = i + a[n].x;
        } else {
            f[n][i] = max(0, i - a[n].y);
        }
    }

    for (int i = n - 1; i >= 1; i --) {
        for (int j = 0; j <= 1000; j ++) {
            if (a[i].p >= j) {
                f[i][j] = f[i + 1][j + a[i].x];
            } else {
                f[i][j] = f[i + 1][max(0, j - a[i].y)];
            }
        }
    }

    vector <int> s (n + 1);
    for (int i = 1; i <= n; i ++) {
        s[i] = s[i - 1] + a[i].y;
    }

    int q;
    cin >> q;

    while (q --) {
        int x;
        cin >> x;

        if (x > 1000) {
            int lo = 1, hi = n;
            while (lo < hi) {
                int mid = lo + hi >> 1;
                if (x - s[mid] <= 1000) {
                    hi = mid;
                } else {
                    lo = mid + 1;
                }
            }

            if (x - s[hi] <= 1000) {
                if (hi + 1 <= n) {
                    cout << f[hi + 1][max(0, x - s[hi])] << '\n';
                } else {
                    cout << max(0, x - s[hi]) << '\n';
                }
            } else {
                cout << max(0, x - s[hi]) << '\n';
            }
        } else {
            cout << f[1][x] << '\n';
        }
    }
}
int main(void)
{
    ios::sync_with_stdio(0);
    cin.tie(0), cout.tie(0);
    int T = 1;
    // cin >> T;
    for (int i = 1; i <= T; i ++) {
        isac();
    }
    return 0;
}