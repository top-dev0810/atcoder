#include <bits/stdc++.h>

using namespace std;

#define int long long

const int MOD = 998244353, N = 3e5 + 5;

int n, c, a[N], f[N], pre[N];

int qpow(int a, int p) {
    int res = 1;
    while (p) {
        if (p & 1) res = res * a % MOD;
        a = a * a % MOD;
        p >>= 1;
    }
    return res;
}

signed main () {
    cin >> n >> c;
    int s = 0;
    for (int i = 1; i <= n; i ++) {
        cin >> a[i];
        s += a[i];
    } 

    a[c] ++;

    int tmp = a[c];
    sort(a + 1, a + n + 1);
    c = lower_bound(a + 1, a + 1 + n, tmp) - a;

    int invs = qpow(s, MOD - 2), sum = 1;
    for (int i = 1; i <= n; i ++) {
        pre[i] = (pre[i - 1] + a[i] * invs) % MOD;
    }

    for (int i = n; i >= c; i --) {
        f[i] = sum * qpow((1 - pre[i - 1] + MOD) % MOD, MOD - 2) % MOD;
        sum = (sum + f[i] * a[i] % MOD * invs) % MOD;
    }

    cout << f[c];


    return 0;
}