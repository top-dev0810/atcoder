#include <bits/stdc++.h>
using namespace std;

int count_diff(const vector<string>& S, const vector<string>& T) {
    int diff = 0;
    int n = S.size();
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (S[i][j] != T[i][j]) {
                diff++;
            }
        }
    }
    return diff;
}

vector<string> rotate(const vector<string>& S) {
    int n = S.size();
    vector<string> tmp(n, string(n, ' '));
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            tmp[i][j] = S[n - 1 - j][i];
        }
    }
    return tmp;
}

int main() {
    int n;
    cin >> n;
    vector<string> S(n), T(n);
    for (auto& s : S) cin >> s;
    for (auto& t : T) cin >> t;
    
    int min_operations = INT_MAX;
    vector<string> current = S;
    
    for (int rotations = 0; rotations < 4; rotations++) {
        int operations = rotations + count_diff(current, T);
        min_operations = min(min_operations, operations);
        current = rotate(current);
    }
    
    cout << min_operations << endl;
    return 0;
}