#include <bits/stdc++.h>
using namespace std;
const int N = 5500;
int a[N], cnt[N], vis[N];
typedef long long ll;
const ll mod = 998244353;
ll ksm(ll a, ll b = mod - 2)
{
    ll ans = 1;
    while (b)
    {
        if (b & 1) ans = ans * a % mod;
        a = a * a % mod; b >>= 1;
    }
    return ans;
}
ll fac[N], ifac[N], dp[N][N], s[N];
ll C(int n, int m) { return fac[n] * ifac[m] % mod * ifac[n - m] % mod; }
int main()
{
    fac[0] = 1; for (int i = 1;i < N;i++) fac[i] = fac[i - 1] * i % mod;
    ifac[N - 1] = ksm(fac[N - 1]); for (int i = N - 1;i >= 1;i--) ifac[i - 1] = ifac[i] * i % mod;
    int n; cin >> n;
    for (int i = 1;i <= n;i++) cin >> a[i];
    if (a[n] != -1 && a[n] != n) { cout << 0 << '\n';return 0; }
    else a[n] = n;
    for (int i = 1;i <= n;i++)
    {
        vis[i] = vis[i - 1];
        if (a[i] == -1) continue; vis[i]++; cnt[a[i]]++;
        if (cnt[a[i]] >= 2) { cout << 0 << '\n';return 0; }
    }
    for (int i = 1;i <= n;i++) cnt[i] += cnt[i - 1];
    dp[0][0] = 1; ll ans = 0;
    for (int i = 1;i <= n;i++)
    {
        if (a[i] != -1)
        {
            for (int j = 0;j <= n;j++)
                dp[i][max(j, a[i])] += dp[i - 1][j];
            for (int j = a[i];j >= 0;j--)
                dp[i][max(j, a[i])] += dp[i - 1][j];
        }
        else
        {
            s[0] = dp[i - 1][0];
            for (int j = 1;j <= n;j++) s[j] = s[j - 1] + dp[i - 1][j];
            for (int k = i;k <= n;k++) if (cnt[k] - cnt[k - 1] == 0)
                dp[i][k] += s[k - 1] * 2;
            for (int k = i;k <= n;k++) if (k - i + 1 - cnt[k] + vis[i] > 0)
                dp[i][k] += dp[i - 1][k] * (k - i + 1 - cnt[k] + vis[i]);
        }
        for (int j = 0;j <= n;j++) dp[i][j] %= mod;
    }
    cout << dp[n - 1][n - 1] << '\n';
    return 0;
}