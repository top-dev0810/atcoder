#include<bits/stdc++.h>
using namespace std;

#define int ll
typedef long long ll;
typedef unsigned long long ull;

#define mk make_pair
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<double,double> pdd;

#define ReadIn(s) freopen(s,"r",stdin)
#define OutPut(s) freopen(s,"w",stdout)

#define btpcll(x) __builtin_popcountll(x)
#define btpc(x) __builtin_popcount(x)

#define eb emplace_back
#define sz(x) (int)(x.size())

template<typename T>
void read(T &x){
	x=0;char c=getchar();T neg=0;
	while(!isdigit(c)) neg|=!(c^'-'),c=getchar();
	while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();
	if(neg) x=(~x)+1;
}
template<typename T,typename ...Args>
void read(T &x,Args &...args) {
	read(x);read(args...);
}

const int M=5e5+10;
const int inf=0x3f3f3f3f3f3f3f3f;
const double eps=1e-10;

inline int comp (double x,double y) {
	if(x-y>eps) return 1;
	if(y-x>eps) return -1;
	return 0;
}

bool Mst;
//in this

int n;
int L[M],R[M];

pii Le,Mid,Ri;
pii l[M],r[M],mid[M];

void solve() {
	read(n);
	for(int i=1;i<=n;i++) read(L[i],R[i]),L[i]++,R[i]++;
	
	Mid=mk(L[n],R[n]);
	
//	cout<<Le.fi<<" "<<Le.se<<" "<<Mid.fi<<" "<<Mid.se<<" "<<Ri.fi<<" "<<Ri.se<<"\n";
	
	for(int i=n-1;i;i--) {
		
		l[i+1]=Le;r[i+1]=Ri;mid[i+1]=Mid;
		
		if(R[i]<L[i+1]) {
			
			Ri=mk(0,0);
			Mid=mk(0,0);
			Le=mk(L[i],R[i]);
			
			continue;
			
		}
		
		if(L[i]>R[i+1]) {
			
			Le=mk(0,0);
			Mid=mk(0,0);
			Ri=mk(L[i],R[i]);
			
			continue;
		}
		
		if(L[i]<L[i+1]) {
			if(Le.fi) Le.fi=L[i];
			else if(Mid.fi) Le=mk(L[i],Mid.fi);
			else Le=mk(L[i],Ri.fi);
		}
		else if(L[i]>L[i+1]) {
			
			if(Le.se&&Le.se>=L[i]&&Le.fi<=L[i]) Le.fi=L[i];
			else if(Mid.se&&Mid.se>=L[i]&&Mid.fi<=L[i]) Mid.fi=L[i],Le=mk(0,0);
			else if(Ri.fi&&Ri.fi<=L[i]) Ri.fi=L[i],Le=mk(0,0),Mid=mk(0,0);
			

		}
		
		if(R[i]>R[i+1]) {
			if(Ri.fi) Ri.se=R[i];
			else if(Mid.fi) Ri=mk(Mid.se,R[i]);
			else Ri=mk(Le.se,R[i]);
		}
		else if(R[i]<R[i+1]) {
				
			if(Ri.fi&&Ri.fi<=R[i]&&Ri.se>=R[i]) Ri.se=R[i];
			else if(Mid.fi&&Mid.fi<=R[i]&&Mid.se>=R[i]) Mid.se=R[i],Ri=mk(0,0);
			else if(Le.fi&&Le.fi<=R[i]&&Le.se>=R[i]) Le.se=R[i],Mid=mk(0,0),Ri=mk(0,0);				
				

		}
		
	}
	l[1]=Le;r[1]=Ri;mid[1]=Mid;
	
//	for(int i=1;i<=n;i++) {
//		cout<<l[i].fi<<" "<<l[i].se<<" "<<mid[i].fi<<" "<<mid[i].se<<" "<<r[i].fi<<" "<<r[i].se<<"\n";
//	}
	
	int st=0;
	
	if(Le.fi) st=Le.se;
	else if(Mid.fi) st=Mid.fi;
	else st=Ri.fi;
	
	cout<<st-1<<" ";
	for(int i=2;i<=n;i++) {
		
		if(st<L[i]) st=L[i];
		else if(st>R[i]) st=max({l[i].se,mid[i].se,r[i].fi});
		
		else if(l[i].fi&&l[i].fi<=st&&st<=l[i].se) ;
		else if(mid[i].fi&&st>=mid[i].fi&&st<=mid[i].se) ;
		else if(r[i].fi&&st>=r[i].fi&&st<=r[i].se) st=r[i].fi;
		else assert(0);
	
		cout<<st-1<<" ";
	
	}
	
}

//
bool Med;

signed main() {
	
	solve();
	
	cerr<<"\n";
	cerr<<"Memory:"<<(&Mst-&Med)/1024.0/1024<<" MB\n";
	cerr<<"Time:"<<clock()/1.0/CLOCKS_PER_SEC*1000.0<<" ms\n";

	return 0;
}
