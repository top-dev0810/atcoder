#include <bits/stdc++.h>

typedef long long lnt;

using namespace std;

const int N = 1e6 + 7, M = 998244353;

int n;
int a[N];

int ksm(int x, int y = M - 2, int res = 1) {
    for (; y; x = (lnt) x * x % M, y /= 2) {
        if (y & 1) {
            res = (lnt) res * x % M;
        }
    }
    return res;
}

int ica[N + 1];
int vca[N + 1];

inline void INIT() {
    ica[0] = 1;
    for (int i = 1; i <= N; ++ i) {
        ica[i] = (lnt) ica[i - 1] * i % M;
    }
    vca[N] = ksm(ica[N]);
    for (int i = N; i >= 1; -- i) {
        vca[i - 1] = (lnt) vca[i] * i % M;
    }
}

inline int C(int n, int m) {
    if (m < 0 || n < m) {
        return 0;
    }
    return (lnt) ica[n] * vca[n - m] % M * vca[m] % M;
}

inline int calc(int x1, int y1, int x2, int y2) {
    if (x1 > x2 || y1 > y2) {
        return 0;
    }
    return C(x2 + y2 - x1 - y1, x2 - x1);
}

inline void WORK() {
    cin >> n;
    for (int i = 1; i <= n; ++ i) {
        cin >> a[i];
    }
    int s = 0;
    int ans = 0;
    int fl = 1;
    for (int i = 1; i < n; ++ i) {
        for (int j = 0; j < a[i]; ++ j) {
            if (s < i) {
                ++ s;
                continue;
            }
            ans +=
                calc(i, s, n - 1, n - 1) -
                calc(i, s, n, n - 2)
            ;
            if (ans < 0) {
                ans += M;
            } else if (ans >= M) {
                ans -= M;
            }
            ++ s;
        }
        if (n <= s || s < i) {
            fl = 0;
            break;
        }
    }
    if (s != n - 1) {
        fl = 0;
    }
    if (fl && ( ++ ans) == M) {
        ans = 0;
    }
    cout << ans << '\n';
}

//#define filename ""

int main() {
    #ifdef filename
    freopen(filename ".in", "r", stdin);
    freopen(filename ".out", "w", stdout);
    #endif
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(0);
    int Turn = 1;
    //cin >> Turn;
    INIT();
    while (Turn -- ) {
        WORK();
    }
    return 0;
}