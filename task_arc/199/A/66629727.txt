#include<bits/stdc++.h>//0xnnb
using namespace std;
typedef long long ll;
typedef double db;
typedef unsigned long long ull;
int read() {
	int x = 0, f = 1;
	char ch = getchar();
	while (ch < '0' || ch>'9') {
		if (ch == '-')f = -1;
		ch = getchar();
	}
	while (ch >= '0' && ch <= '9') {
		x = x * 10 + ch - '0';
		ch = getchar();
	}
	return x * f;
}
const int N = 1005;
int T, n, a[N][N], ax[N], ay[N], ansx[N], ansy[N];
char s[N];
void solve() {
	n = read();
	for (int i = 1; i <= n; i++) {
		scanf("%s", s + 1);
		for (int j = 1; j <= n; j++) {
			a[i][j] = s[j] - '0';
		}
	}
	for (int i = 1; i <= n; i++)ax[i] = read();
	for (int i = 1; i <= n; i++)ay[i] = read();
	for (int j = 1; j <= n; j++) {
		if (a[1][j]) {
			ansy[j] ^= 1;
			for (int i = 1; i <= n; i++)a[i][j] ^= 1;
		}
	}
	for (int i = 2; i <= n; i++) {
		int tmp = 0;
		for (int j = 1; j <= n; j++)tmp += a[i][j];
		if (tmp > n / 2) {
			ansx[i] ^= 1;
			for (int j = 1; j <= n; j++)a[i][j] ^= 1;
		}
	}
	for (int j = 1; j <= n; j++) {
		int tmp = 0;
		for (int i = 1; i <= n; i++)tmp += a[i][j];
		if (tmp > n / 2) {
			ansy[j] ^= 1;
			for (int i = 1; i <= n; i++)a[i][j] ^= 1;
			tmp = n - tmp;
		}
		if (tmp != ay[j]) {
			printf("No\n");
			return;
		}
	}
	for (int i = 1; i <= n; i++) {
		int tmp = 0;
		for (int j = 1; j <= n; j++)tmp += a[i][j];
		if (tmp != ax[i]) {
			printf("No\n");
			return;
		}
	}
	printf("Yes\n");
	for (int i = 1; i <= n; i++)printf("%d", ansx[i]);
	printf("\n");
	for (int i = 1; i <= n; i++)printf("%d", ansy[i]);
	printf("\n");
}
void clear() {
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= n; j++)a[i][j] = 0;
		ax[i] = ay[i] = ansx[i] = ansy[i] = s[i] = 0;
	}
	n = 0;
}
int main() {
	T = read();
	for (int tt = 1; tt <= T; tt++) {
		solve();
		clear();
	}
	return 0;
}
