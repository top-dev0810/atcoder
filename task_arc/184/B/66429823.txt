#include<bits/stdc++.h>
using namespace std;

#define int ll
typedef long long ll;
typedef unsigned long long ull;

#define mk make_pair
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<double,double> pdd;

#define ReadIn(s) freopen(s,"r",stdin)
#define OutPut(s) freopen(s,"w",stdout)

#define btpcll(x) __builtin_popcountll(x)
#define btpc(x) __builtin_popcount(x)

#define eb emplace_back
#define sz(x) (int)(x.size())

template<typename T>
void read(T &x){
	x=0;char c=getchar();T neg=0;
	while(!isdigit(c)) neg|=!(c^'-'),c=getchar();
	while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();
	if(neg) x=(~x)+1;
}
template<typename T,typename ...Args>
void read(T &x,Args &...args) {
	read(x);read(args...);
}

const int M=3e5+10;
const int inf=0x3f3f3f3f3f3f3f3f;
const double eps=1e-10;

inline int comp (double x,double y) {
	if(x-y>eps) return 1;
	if(y-x>eps) return -1;
	return 0;
}

bool Mst;
//in this

void FWT(int n,int *a) {
	for(int k=1;k<n;k<<=1) {
		for(int i=0;i<n;i+=(k<<1)) {
			for(int j=0;j<k;j++) {
				a[i|j]=min(a[i|j],a[i|j|k]);
			}
		}
	}
}

int n;

int siz[M];

int f[1<<20];
int g[1<<20];

int solve(int u) {
	
	siz[0]=1;
	vector<int>vec={u};
	
	int dep=0;
	
	while(1) {
		dep++;
		vector<int>nxt;
		
		for(auto it:vec) {
			if(it*2<=n) nxt.eb(it*2);
			if(it*3<=n) nxt.eb(it*3);
		}
		
		nxt.erase(unique(nxt.begin(),nxt.end()),nxt.end());
		
//		for(auto it:nxt) cout<<it<<" ";cout<<"\n";
		
		siz[dep]=sz(nxt);
		
		vec=nxt;
		
		if(!sz(vec)) break;
		
	}
	
	dep--;
	
//	cout<<dep<<":";
//	for(int i=0;i<=dep;i++) cout<<siz[i]<<" ";cout<<"\n";
	
		
	for(int i=0;i<1<<siz[dep];i++) f[i]=btpc(i);
	
	for(int i=dep-1;i+1;i--) {
		int _n=1<<siz[i+1],U=_n-1;
		int _U=1<<siz[i];
		
		FWT(_n,f);
		
		for(int S=0;S<_U;S++) {
			
//			cout<<S<<" "<<(((S|(S<<1))&U)^U)<<"\n";
			
			g[S]=f[((S|(S<<1))&U)^U]+btpc(S);
		}
		
		for(int S=0;S<_U;S++) f[S]=g[S];
		
//		cout<<i<<":";
//		for(int S=0;S<_U;S++) cout<<f[S]<<" ";cout<<"\n";
		
	}
	
//	cout<<f[1]<<"\n";
	
	return f[1];
	
}

int CNT(int x) {
	return x-x/2-x/3+x/6;
}

void solve() {
	read(n);
	
	int ans=0;
	
	for(int l=1,r=0;l<=n;l=r+1) {
		r=n/(n/l);
		
//		cout<<l<<" "<<r<<"\n";
		
		ans+=(CNT(r)-CNT(l-1))*solve(l);
	}
	
	cout<<ans;
	
}

//
bool Med;

signed main() {
	
	solve();
	
	cerr<<"\n";
	cerr<<"Memory:"<<(&Mst-&Med)/1024.0/1024<<" MB\n";
	cerr<<"Time:"<<clock()/1.0/CLOCKS_PER_SEC*1000.0<<" ms\n";

	return 0;
}
