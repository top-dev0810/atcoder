#include<bits/stdc++.h>
using namespace std;

#define int ll
typedef long long ll;
typedef unsigned long long ull;

#define mk make_pair
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<double,double> pdd;

#define ReadIn(s) freopen(s,"r",stdin)
#define OutPut(s) freopen(s,"w",stdout)

#define btpcll(x) __builtin_popcountll(x)
#define btpc(x) __builtin_popcount(x)

#define eb emplace_back
#define sz(x) (int)(x.size())

template<typename T>
void read(T &x){
	x=0;char c=getchar();T neg=0;
	while(!isdigit(c)) neg|=!(c^'-'),c=getchar();
	while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();
	if(neg) x=(~x)+1;
}
template<typename T,typename ...Args>
void read(T &x,Args &...args) {
	read(x);read(args...);
}

const int M=8e5+10;
const int inf=0x3f3f3f3f3f3f3f3f;
const double eps=1e-10;
const int p=998244353;

inline int comp (double x,double y) {
	if(x-y>eps) return 1;
	if(y-x>eps) return -1;
	return 0;
}

bool Mst;
//in this

int n;

int dp[M];

int sum[310][310];

pii po[M];

int get(int x1,int y1,int x2,int y2) {
	return sum[x2][y2]-sum[x1-1][y2]-sum[x2][y1-1]+sum[x1-1][y1-1];
}

void solve( ) {
	
	read(n);
	
	for(int i=1;i<=n;i++) read(po[i].fi,po[i].se),po[i].fi++,po[i].se++,sum[po[i].fi][po[i].se]++;
	
	po[0]=mk(1,n+2);sum[1][n+2]++;
	po[n+1]=mk(n+2,1);sum[n+2][1]++;
	
	for(int i=1;i<=n+2;i++) {
		for(int j=1;j<=n+2;j++) {
			sum[i][j]+=sum[i-1][j]+sum[i][j-1]-sum[i-1][j-1];
		}
	}
	
	dp[0]=1;
	
	sort(po+1,po+n+1,[](pii a,pii b) {
		return a.fi<b.fi;
	});
	
	for(int i=0;i<n+1;i++) {
		for(int j=i+1;j<=n+1;j++) {
			
			if(po[j].se>po[i].se) continue;
			
			int fl=0;
			for(int k=i+1;k<j;k++) {
				if(po[k].se>po[i].se||po[j].se>po[k].se) continue;
				if(get(po[i].fi,po[k].se,po[k].fi,po[i].se)+get(po[k].fi,po[j].se,po[j].fi,po[k].se)==get(po[i].fi,po[j].se,po[j].fi,po[i].se)+1) fl=1;
//				cout<<get(po[i].fi,po[k].se,po[k].fi,po[i].se)<<" "<<get(po[k].fi,po[j].se,po[j].fi,po[k].se)<<" "<<get(po[i].fi,po[j].se,po[j].fi,po[i].se)<<"\n";
			}
			
//			cout<<i<<" "<<j<<" "<<fl<<"\n";
			
			if(!fl) (dp[j]+=dp[i])%=p;
		}
		
	}
	
	cout<<dp[n+1]<<"\n";
	
	
}

//
bool Med;

signed main() {
	
	solve();
	
	cerr<<"\n";
	cerr<<"Memory:"<<(&Mst-&Med)/1024.0/1024<<" MB\n";
	cerr<<"Time:"<<clock()/1.0/CLOCKS_PER_SEC*1000.0<<" ms\n";

	return 0;
}
