#include <bits/stdc++.h>

using namespace std;

typedef long long lnt;

const int N = 1007;

int n;
lnt a[N];
lnt b[N];

pair<int, int> solve(int l, int r) {
    if (l > r) {
        return make_pair(0, 0);
    }
    if (l == r) {
        return make_pair(1, 1);
    }
    int cnt[] = { 0, 0, 0, 0 };
    int pl = l - 1, pr = r + 1;
    for (int i = l; i <= r; ++ i) {
        if (a[i] & 1) {
            b[ ++ pl] = a[i];
        } else {
            b[ -- pr] = a[i];
        }
        ++ cnt[a[i] & 3];
    }
    for (int i = l; i <= r; ++ i) {
        a[i] = (b[i] + 1) >> 1;
    }
    auto ql = solve(l, pl);
    auto qr = solve(pr, r);
    return make_pair(
        max(cnt[3] + qr.first, cnt[1] + qr.second),
        max(cnt[2] + ql.first, cnt[0] + ql.second)
    );
}

void INIT() { }

void WORK() {
    cin >> n;
    for (int i = 1; i <= n; ++ i) {
        cin >> a[i];
    }
    auto ans = solve(1, n);
    cout << max(ans.first, ans.second) << '\n';
}

//#define filename ""

int main() {
    #ifdef filename
    freopen(filename ".in", "r", stdin);
    freopen(filename ".out", "w", stdout);
    #endif
    cin.tie(0); cout.tie(0);
    ios::sync_with_stdio(0);
    
    INIT();
    int Turn = 1;
    //cin >> Turn;
    while (Turn -- ) {
        WORK();
    }
    return 0;
}