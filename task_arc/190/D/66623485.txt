#include<bits/stdc++.h>
#define int long long
using namespace std;
namespace fast_IO {//我向众神祈祷，回应我的只有心跳
#define IOSIZE 100000
	char ibuf[IOSIZE], obuf[IOSIZE], *p1 = ibuf, *p2 = ibuf, *p3 = obuf;
#define getchar() ((p1==p2)and(p2=(p1=ibuf)+fread(ibuf,1,IOSIZE,stdin),p1==p2)?(EOF):(*p1++))
#define putchar(x) ((p3==obuf+IOSIZE)&&(fwrite(obuf,p3-obuf,1,stdout),p3=obuf),*p3++=x)
#define isdigit(ch) (ch>47&&ch<58)
#define isspace(ch) (ch<33)
	template<typename T> inline T read() { T s = 0; int w = 1; char ch; while (ch = getchar(), !isdigit(ch) and (ch != EOF)) if (ch == '-') w = -1; if (ch == EOF) return false; while (isdigit(ch)) s = s * 10 + ch - 48, ch = getchar(); return s * w; }
	template<typename T> inline bool read(T &s) { s = 0; int w = 1; char ch; while (ch = getchar(), !isdigit(ch) and (ch != EOF)) if (ch == '-') w = -1; if (ch == EOF) return false; while (isdigit(ch)) s = s * 10 + ch - 48, ch = getchar(); return s *= w, true; }
	template<typename T> inline void print(T x) { if (x < 0) putchar('-'), x = -x; if (x > 9) print(x / 10); putchar(x % 10 + 48); }
	inline bool read(char &s) { while (s = getchar(), isspace(s)); return true; }
	inline bool read(char *s) { char ch; while (ch = getchar(), isspace(ch)); if (ch == EOF) return false; while (!isspace(ch)) *s++ = ch, ch = getchar(); *s = '\000'; return true; }
	inline void print(char x) { putchar(x); }
	inline void print(char *x) { while (*x) putchar(*x++); }
	inline void print(const char *x) { for (int i = 0; x[i]; i++) putchar(x[i]); }
	inline bool read(std::string& s) { s = ""; char ch; while (ch = getchar(), isspace(ch)); if (ch == EOF) return false; while (!isspace(ch)) s += ch, ch = getchar(); return true; }
	inline void print(std::string x) { for (int i = 0, n = x.size(); i < n; i++) putchar(x[i]); }
	inline bool read(bool &b) { char ch; while(ch=getchar(), isspace(ch)); b=ch^48; return true; }
	inline void print(bool b) { putchar(b+48); }
	template<typename T, typename... T1> inline int read(T& a, T1&... other) { return read(a) + read(other...); }
	template<typename T, typename... T1> inline void print(T a, T1... other) { print(a), print(other...); }
	struct Fast_IO { ~Fast_IO() { fwrite(obuf, p3 - obuf, 1, stdout); } } io;
	template<typename T> Fast_IO& operator >> (Fast_IO &io, T &b) { return read(b), io; }
	template<typename T> Fast_IO& operator << (Fast_IO &io, T b) { return print(b), io; }
#define cout io
#define cin io
#define endl '\n'
} using namespace fast_IO;
const int maxn=100;
int n,mod,a[maxn+5][maxn+5];
struct matrix{
	int a[maxn+5][maxn+5];
	int*operator [](int i){return a[i];}
	matrix(){memset(a,0,sizeof(a));}
	void init(){memset(a,0,sizeof(a));for(int i=1;i<=n;i++)a[i][i]=1;}
};
matrix operator*(matrix A,matrix B){
	matrix res;
	for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)for(int k=1;k<=n;k++)(res[i][j]+=A[i][k]*B[k][j])%=mod;
	return res;
}
matrix ksm(matrix A,int y){
	matrix res;res.init();
	while(y){
		if(y&1)res=res*A;
		y>>=1;A=A*A;
	}
	return res;
}
matrix A,B;
signed main(){
	cin>>n>>mod;int tot=0;
	for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)cin>>A[i][j],tot+=(A[i][j]==0);
	if(mod==2){
		for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)A[i][j]=1;
		B=A*A;
		for(int i=1;i<=n;i++){
			for(int j=1;j<=n;j++)cout<<B[i][j]<<" ";
			cout<<"\n";
		}
		return 0;
	}
	B=ksm(A,mod);
	if(mod==3){
		for(int i=1;i<=n;i++){
			for(int j=1;j<=n;j++){
				if(A[i][j])continue;
				(B[i][j]+=A[j][i])%=mod;
			}
		}
	}
	for(int i=1;i<=n;i++){
		if(A[i][i])continue;
		for(int j=1;j<=n;j++){
			(B[i][j]+=A[i][j])%=mod;
			(B[j][i]+=A[j][i])%=mod;
		}
	}
	int base=(tot&1)?mod-1:1;
	for(int i=1;i<=n;i++){
		for(int j=1;j<=n;j++)cout<<B[i][j]*base%mod<<" ";
		cout<<"\n";
	}
	return 0;
}