#include <bits/stdc++.h>
#define int long long
using namespace std;
// const int MOD = 998244353;
int MOD;
#ifdef int
#define inf 0x3f3f3f3f3f3f3f3f
#else
#define inf 0x3f3f3f3f
#endif
const long long infll = 0x3f3f3f3f3f3f3f3f;
#define pii pair<int, int>
#define mkp(x, y) make_pair(x, y)

#ifndef LOCAL
#define SUBMIT
#endif

#ifdef SUBMIT
#define endl '\n'
// #define cin Fastio ::cin
// #define cout Fastio ::cout
#endif

template <typename T>
void read(vector<T> &vec)
{
    for (auto &x : vec)
    {
        cin >> x;
    }
}

int qpow(int n, int k)
{
    int res = 1;
    while (k)
    {
        if (k & 1)
            (res *= n) %= MOD;
        (n *= n) %= MOD;
        k >>= 1;
    }
    return res;
}

struct Matrix
{
#define SIZ 110
    int a[SIZ][SIZ];
    Matrix(int x = 0)
    {
        memset(a, 0, sizeof a);
        for (int i = 0; i < SIZ; i++)
        {
            a[i][i] = x;
        }
    }
    Matrix operator*(const Matrix &b)
    {
        Matrix c;
        for (int i = 0; i < SIZ; i++)
        {
            for (int j = 0; j < SIZ; j++)
            {
                for (int k = 0; k < SIZ; k++)
                {
                    c.a[i][j] += a[i][k] * b.a[k][j] % MOD;
                    c.a[i][j] %= MOD;
                }
            }
        }
        return c;
    }
    Matrix operator*(const int &b)
    {
        Matrix c(b);
        return (*this) * c;
    }
    int *operator[](int x)
    {
        return a[x];
    }
    void print(int siz=SIZ)
    {
        for (int i = 1; i <= siz; i++)
        {
            for (int j = 1; j <= siz; j++)
            {
                cout << a[i][j] << ' ';
            }
            cout << endl;
        }
        cout << endl;
    }
};

Matrix qpow(Matrix n, int k)
{
    Matrix res(1);
    while (k)
    {
        if (k & 1)
            res = res * n;
        n = n * n;
        k >>= 1;
    }
    return res;
}

void work()
{
    int n;
    cin >> n >> MOD;
    Matrix a;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
        {
            cin >> a[i][j];
        }
    if (MOD == 2)
    {
        Matrix res;
        for(int i=1;i<=n;i++)for(int j=1;j<=n;j++)res[i][j]=1;
        a = qpow(res, 2);
        a.print(n);
        return;
    }
    Matrix res = qpow(a, MOD);
    for (int i = 1; i <= n; i++)
    {
        if (a[i][i])
            continue;
        for (int j = 1; j <= n; j++)
        {
            res[i][j] = (res[i][j] + a[i][j]) % MOD;
            res[j][i] = (res[j][i] + a[j][i]) % MOD;
        }
    }
    if (MOD == 3)
    {
        for (int i = 1; i <= n; i++)
            for (int j = 1; j <= n; j++)
            {
                if (a[i][j])
                    continue;
                res[i][j] = (res[i][j] + a[j][i]) % MOD;
            }
    }
    int cnt = 0;
    for (int i = 1; i <= n; i++)
        for (int j = 1; j <= n; j++)
            cnt += (a[i][j] == 0);
    cnt = (cnt & 1 ? MOD - 1 : 1);
    res=res*cnt;
    res.print(n);
}

signed main()
{
#ifndef cin
#ifdef SUBMIT
    ios::sync_with_stdio(0);
    cin.tie(0);
#endif
#endif
    int t = 1;
    // cin>>t;
    while (t--)
    {
        work();
    }
}
/*
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%##**##%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@@@@@@########**%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*###*#%@@@%*#######***+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+#####**@@*#####**++++++@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+++####*+**####**%#++++=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%#++=*##*+%%#*++++#%*+++++%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%###****##*#****++++*#++++=*%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%########*#**###############**++==+=*##%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%%%#***##**#############**#######*++=++***%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%%%%%%######+*#################**#####*+**+****#%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@%%%%%#*#####*+###################***#####*+*+***+#%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@%%%%%%#*####*##+*##**################***####*+*+*#***###%%%%%%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%%%%%%%#*####**###+*%#+*#################***####*++++++******%%%%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%%%%#######+##*##**#*##*##################**+##++**=+***+*##%%%%%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@%%%%%%%########+*%###%###+#@%%%%###%%%%%%#******###++%%+++**++#%%%%%%%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@%%@@@%###*######+*%%%%#######%@#*+===+******++*#####*=++*+++*%##%%%%%%%%@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%#**##*%##%##+**#%%%%%%%%%%+++=#%#=+*####**######*++=*####*+#%%%%%%%%%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%%%%@##%##%##*#@%%%%#%%%%%**@+=****+*%%%%%*########**++++++#%%%%%%%%%%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@##%%#%##*#@@#**#*%%%%%@@#+###%*#@%*%%#+*###*****+++**%%%%%%%%%%%%%@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%@%*%#*#%##*%+===#**@@@@@@@@%%%#*%%*#%%#+=+**+=++**##%%%%%%%%%%%%%%%%%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%*###*%%%*+=#%-+++#@@@@@@@@@%##%%*#%%#==+=++++++#%%%%%%%%%%@@@@%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%@#*%@%**###*##@#*#%#@@@@@@@@@@@@%*+###+*%#++++++===++*#%%%@@%%%%#%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%@@@%#*+#*#*###%#%@@@@%@@@@@@#+=+*###*%@@*++#******#%%%@@@%%#%%%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%*##%@%*#%%*#%@@@%#%@@%#**+++=++******++++%@@@%%%%%@@%%%#%%%%%%%@@@@%%@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%%@@@@##@@%%#*#**++++++#%@%*******#*++#%#**@@%%%%%%%%%%%%%%%%@@@@@%@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%##%##+##**+++++=*#@@%%*+**####*+++*%%@@@%%%%@%%%%%%%%%@@@%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%**###%%%***++++==+%#*%%%%@@%#*#**#*###*%@%%%%%@%%%%%%%%@@%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#+========*#*%@@@@@@@@@#%@@%%%%%*##@%%%%%%%%%%@%%%##%%#%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%##*++=+%#+==+#*#@%@#++*++++=+++%%@%#%*%%%%%%%%%%@%%###%%%%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%#########+++=+*==+=#++*%#-========---=+%%####%##%%%%%#%###%%##@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@#*******#%%##*+====++*+#=***++====+*#*=====-=*#*+%%#%%%##*#%%%%%#@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%**##%%%%%%###*#**+++++*+*++##*++===#%*==========+*###%%##*#%%#%%%@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%*#%@%%#####%#%@%#*++==-====+#%***+=======+===++++%%*%%####%%#%##@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@*@%##%%%@@@%*@@*#+++++===--==*#%%#*+==++=+====+++%##%**#*####**%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#%%+%@@@@%%@@%##**=+++====--====*#%%%*+*+**++*++++@#*#********#@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#%#*#@@@@@%%%%@###++======--+**#++#%%%##%%%##%*##*%**********#@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%###*#%%%@@%%%%%%%@#**====--=**+*+-+%%%****##**#***********##@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@###**#%%%###%%%%#*##*=+=--*#*#****+@@%+#####**##*****+*#%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%###**###%%%#++**##+==-=#%#%%%#*+@@%*###****##*****#@@%@@@@@@@@%@@%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%%%##%%#+++++++*##*##*######%@#**#####**#***##%@@@@%@@@@@@%@@@@%%@@%@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%++++++++=++=+%%%%#%#****###**#########*#%@@@@@@@@%@@@@@@@@%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+++++++==*%%%%%%#%%%###########**#%@@@@@@@@@%@%@@%@%#@@%#%%%@%@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*+++=+#%%##%%%########%##%%%%@@@@@@@@@@@@@%@%@%%@%%@@@@%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@%#%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/