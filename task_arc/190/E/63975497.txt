#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
//const int p=998244353;
const int N=1000100;
struct apple{
    ll t[7][7];
    friend apple operator*(apple x,apple y){
        apple z;
        for(int i=0;i<7;i++)for(int j=0;j<7;j++)z.t[i][j]=1e18;
        for(int i=0;i<7;i++)for(int j=0;j<7;j++)for(int k=0;k<7;k++)z.t[i][j]=min(z.t[i][j],x.t[i][k]+y.t[k][j]);
        return z;
    }
}sg[N];
int a[N];
void init(int l,int r,int p){
    if(l==r){
        for(int i=0;i<7;i++)for(int j=0;j<7;j++)sg[p].t[i][j]=1e18;
        sg[p].t[0][0]=a[l];
        sg[p].t[0][5]=0;
        sg[p].t[1][3]=a[l];
        sg[p].t[2][4]=a[l];
        sg[p].t[3][0]=a[l];
        sg[p].t[4][0]=a[l];
        sg[p].t[5][6]=a[l];
        sg[p].t[6][0]=a[l];
        if(a[l]&1){
            sg[p].t[0][1]=a[l]/2;
            sg[p].t[1][2]=a[l]/2+1;
            sg[p].t[2][1]=a[l]/2;
            sg[p].t[3][2]=a[l]/2+1;
            sg[p].t[4][1]=a[l]/2;
        }
        else{
            sg[p].t[0][2]=a[l]/2;
            sg[p].t[1][1]=a[l]/2;
            sg[p].t[2][2]=a[l]/2;
            sg[p].t[3][1]=a[l]/2;
            sg[p].t[4][2]=a[l]/2;
        }
        return;
    }
    int md=(l+r)/2;
    init(l,md,p*2);
    init(md+1,r,p*2+1);
    sg[p]=sg[p*2]*sg[p*2+1];
}
apple query(int x,int y,int l,int r,int p){
    if(x<=l&&r<=y){
        return sg[p];
    }
    int md=(l+r)/2;
    if(y<=md)return query(x,y,l,md,p*2);
    if(x>md)return query(x,y,md+1,r,p*2+1);
    return query(x,y,l,md,p*2)*query(x,y,md+1,r,p*2+1);
}
int main(){
    ios::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    int n,q;cin>>n>>q;
    for(int i=1;i<=n;i++)cin>>a[i];
    init(1,n,1);
    for(int i=1;i<=q;i++){
        int l,r;cin>>l>>r;
        auto u=query(l,r,1,n,1);
        ll ans=1e18;
        for(int i=0;i<7;i++)ans=min(ans,u.t[0][i]);
        cout<<ans<<"\n";
    }
    return 0;
}