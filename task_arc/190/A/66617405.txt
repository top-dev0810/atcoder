#include <bits/stdc++.h>
#define int long long
using namespace std;
const int MOD = 998244353;
#ifdef int
#define inf 0x3f3f3f3f3f3f3f3f
#else
#define inf 0x3f3f3f3f
#endif
const long long infll = 0x3f3f3f3f3f3f3f3f;
#define pii pair<int, int>
#define mkp(x, y) make_pair(x, y)

#ifndef LOCAL
#define SUBMIT
#endif

#ifdef SUBMIT
#define endl '\n'
// #define cin Fastio ::cin
// #define cout Fastio ::cout
#endif

template <typename T>
void read(vector<T> &vec)
{
    for (auto &x : vec)
    {
        cin >> x;
    }
}

int qpow(int n, int k)
{
    int res = 1;
    while (k)
    {
        if (k & 1)
            (res *= n) %= MOD;
        (n *= n) %= MOD;
        k >>= 1;
    }
    return res;
}

int n, k;


void work()
{
    cin >> n >> k;
    vector<pair<pii,int>> vec;
    int farfnt = -inf, farbak = inf;
    int fntid = -1, bakid = -1;
    for (int i = 1; i <= k; i++)
    {
        int x, y;
        cin >> x >> y;
        vec.push_back({{x, y},i});
        if (x == 1 && y == n)
        {
            cout << 1 << endl;
            for (int j = 1; j <= k; j++)
            {
                if (j == i)
                    cout << 1 << ' ';
                else
                    cout << 0 << ' ';
            }
            cout << endl;
            return;
        }
        if (x == 1)
        {
            if (y > farfnt)
            {
                farfnt = y;
                fntid = i;
            }
        }
        if (y == n)
        {
            if (x < farbak)
            {
                farbak = x;
                bakid = i;
            }
        }
    }
    if (farfnt >= farbak - 1)
    {
        cout << 2 << endl;
        for (int i = 1; i <= k; i++)
        {
            if (i == fntid || i == bakid)
            {
                cout << 1 << ' ';
            }
            else
            {
                cout << 0 << ' ';
            }
        }
        cout << endl;
        return;
    }
    sort(vec.begin(), vec.end(), [](pair<pii,int> x, pair<pii,int> y)
         {
    if(x.first.first==y.first.first)return x.first.second>y.first.second;
    return x.first.first<y.first.first; });
    int ner = inf, id = -1;
    for (int i = 0; i < k; i++)
    {
        if (ner < vec[i].first.first)
        {
            cout << 2 << endl;
            for (int j = 1; j <= k; j++)
            {
                if (j == id || j == vec[i].second)
                {
                    cout << 2 << ' ';
                }
                else
                {
                    cout << 0 << ' ';
                }
            }
            cout << endl;
            return;
        }
        if (vec[i].first.second < ner)
        {
            ner = vec[i].first.second;
            id = vec[i].second;
        }
    }
    ner = -inf, id = -1;
    for (int i = 0; i < k; i++)
    {
        if (ner >= vec[i].first.second)
        {
            cout << 2 << endl;
            for (int j = 1; j <= k; j++)
            {
                if (j == id)
                    cout << 1 << ' ';
                else if (j == vec[i].second)
                    cout << 2 << ' ';
                else
                    cout << 0 << ' ';
            }
            cout << endl;
            return;
        }
        if (vec[i].first.second > ner)
        {
            ner = vec[i].first.second;
            id = vec[i].second;
        }
    }
    if (k >= 3)
    {
        cout << 3 << endl;
        for(int i=1;i<=k;i++)
        {
            if(i==vec[0].second)cout<<1<<' ';
            else if(i==vec[1].second)cout<<2<<' ';
            else if(i==vec[2].second)cout<<1<<' ';
            else cout<<0<<' ';
        }
        cout << endl;
    }
    else
    {
        cout << -1 << endl;
    }
}

signed main()
{
#ifndef cin
#ifdef SUBMIT
    ios::sync_with_stdio(0);
    cin.tie(0);
#endif
#endif
    int t = 1;
    // cin>>t;
    while (t--)
    {
        work();
    }
}
/*
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%##**##%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@@@@@@########**%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@*###*#%@@@%*#######***+%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+#####**@@*#####**++++++@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@+++####*+**####**%#++++=#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%#++=*##*+%%#*++++#%*+++++%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%%%%###****##*#****++++*#++++=*%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%########*#**###############**++==+=*##%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%%%#***##**#############**#######*++=++***%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%%%%%%######+*#################**#####*+**+****#%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@%%%%%#*#####*+###################***#####*+*+***+#%%%%%%%%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@%%%%%%#*####*##+*##**################***####*+*+*#***###%%%%%%@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%%%%%%%#*####**###+*%#+*#################***####*++++++******%%%%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@%%%%%%%#######+##*##**#*##*##################**+##++**=+***+*##%%%%%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@%%%%%%%########+*%###%###+#@%%%%###%%%%%%#******###++%%+++**++#%%%%%%%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@%%@@@%###*######+*%%%%#######%@#*+===+******++*#####*=++*+++*%##%%%%%%%%@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%#**##*%##%##+**#%%%%%%%%%%+++=#%#=+*####**######*++=*####*+#%%%%%%%%%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%%%%@##%##%##*#@%%%%#%%%%%**@+=****+*%%%%%*########**++++++#%%%%%%%%%%@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@##%%#%##*#@@#**#*%%%%%@@#+###%*#@%*%%#+*###*****+++**%%%%%%%%%%%%%@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%@%*%#*#%##*%+===#**@@@@@@@@%%%#*%%*#%%#+=+**+=++**##%%%%%%%%%%%%%%%%%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%*###*%%%*+=#%-+++#@@@@@@@@@%##%%*#%%#==+=++++++#%%%%%%%%%%@@@@%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%@#*%@%**###*##@#*#%#@@@@@@@@@@@@%*+###+*%#++++++===++*#%%%@@%%%%#%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@%@@@%#*+#*#*###%#%@@@@%@@@@@@#+=+*###*%@@*++#******#%%%@@@%%#%%%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%*##%@%*#%%*#%@@@%#%@@%#**+++=++******++++%@@@%%%%%@@%%%#%%%%%%%@@@@%%@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@%%@@@@##@@%%#*#**++++++#%@%*******#*++#%#**@@%%%%%%%%%%%%%%%%@@@@@%@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%##%##+##**+++++=*#@@%%*+**####*+++*%%@@@%%%%@%%%%%%%%%@@@%%%%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%**###%%%***++++==+%#*%%%%@@%#*#**#*###*%@%%%%%@%%%%%%%%@@%%%%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%#+========*#*%@@@@@@@@@#%@@%%%%%*##@%%%%%%%%%%@%%%##%%#%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%##*++=+%#+==+#*#@%@#++*++++=+++%%@%#%*%%%%%%%%%%@%%###%%%%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%%#########+++=+*==+=#++*%#-========---=+%%####%##%%%%%#%###%%##@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@#*******#%%##*+====++*+#=***++====+*#*=====-=*#*+%%#%%%##*#%%%%%#@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%**##%%%%%%###*#**+++++*+*++##*++===#%*==========+*###%%##*#%%#%%%@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%*#%@%%#####%#%@%#*++==-====+#%***+=======+===++++%%*%%####%%#%##@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@*@%##%%%@@@%*@@*#+++++===--==*#%%#*+==++=+====+++%##%**#*####**%@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#%%+%@@@@%%@@%##**=+++====--====*#%%%*+*+**++*++++@#*#********#@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#%#*#@@@@@%%%%@###++======--+**#++#%%%##%%%##%*##*%**********#@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@%###*#%%%@@%%%%%%%@#**====--=**+*+-+%%%****##**#***********##@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@###**#%%%###%%%%#*##*=+=--*#*#****+@@%+#####**##*****+*#%@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@%###**###%%%#++**##+==-=#%#%%%#*+@@%*###****##*****#@@%@@@@@@@@%@@%@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@%%%##%%#+++++++*##*##*######%@#**#####**#***##%@@@@%@@@@@@%@@@@%%@@%@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@%++++++++=++=+%%%%#%#****###**#########*#%@@@@@@@@%@@@@@@@@%@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#+++++++==*%%%%%%#%%%###########**#%@@@@@@@@@%@%@@%@%#@@%#%%%@%@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*+++=+#%%##%%%########%##%%%%@@@@@@@@@@@@@%@%@%%@%%@@@@%@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%**@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%%@@@%#%@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
*/