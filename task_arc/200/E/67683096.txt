#include <bits/stdc++.h>
using namespace std;

#define fi first
#define se second
#define vi vector<int>
#define pb push_back
#define pii pair<int,int>
#define mkp make_pair
#define debug(x) cout << #x << " = " << x << "\n";
#define rep(i, l, r) for (int i = (l); i <= (r); ++i)
#define per(i, r, l) for (int i = (r); i >= (l); --i)


const int LO = (1 << 20 | 1);
char buffer[LO], *S, *TT;
#define getchar() ((S==TT&&(TT=(S=buffer)+fread(buffer,1,LO,stdin),S==TT))?EOF:*S++)

int rd() {
	int x = 0, f = 1;
	char ch = getchar();
	while (!('0' <= ch && ch <= '9')) {
		if (ch == '-') f = -1; ch = getchar();
	}
	while ('0' <= ch && ch <= '9') {
		x = (x << 1) + (x << 3) + (ch ^ 48); ch = getchar();
	}
	return x * f;
}

void wr(int x) {
	if (x < 0) putchar('-'), x = -x;
	if (x >= 10) wr(x / 10); putchar(x % 10 + '0');
}
bool MemoryST;

const int N = 2e5 + 10;
const int mod = 998244353;

int ksm (int x, int y = mod - 2) {
	if (y < 0)
		return 0;
	int res = 1;
	while (y) {
		if (y & 1) res = 1ll * res * x % mod;
		x = 1ll * x * x % mod; y >>= 1;
	}
	return res;
}

void Mainsolve() {
	int n, m;
	cin >> n >> m;
	--n;
	int r1 = ksm(m + 1, n);
	int r2 = (ksm(4, n) - 3ll * ksm(3, n) % mod + mod) % mod;
	r2 = (r2 + 3ll * ksm(2, n) % mod - 1) % mod;
	r2 = 1ll * r2 * ksm(6) % mod * m % mod * (m - 1) % mod * (m - 2) % mod;
	int r3 = 1ll * (ksm(m + 1, n) + mod - ksm(2, n)) * m % mod;
	int r4 = (ksm(4, n) + mod - 3ll * ksm(3, n) % mod) % mod;
	r4 = (r4 + 2ll * ksm(2, n) % mod) % mod;
	r4 = 1ll * r4 * ksm(2) % mod * m % mod * (m - 1) % mod;
	r1 = (r1 + r2) % mod;
	r1 = (r1 + r3) % mod;
	r1 = (r1 + r4) % mod;
	cout << 1ll * r1 * ksm(2, m) % mod << "\n";
}

bool MemoryED;
int main() {
//	freopen (".in", "r", stdin);
//	freopen (".out", "w", stdout);
	ios::sync_with_stdio(false); cin.tie(0); cout.tie(0);

	cerr << fixed << setprecision(6) << (&MemoryST - &MemoryED) / 1024.0 << "KB\n";

	int T; cin >> T;
	while (T--) Mainsolve();

	cerr << endl << 1e3 * clock() / CLOCKS_PER_SEC << "ms\n";

//	system("fc .out .out");
	return 0;
}