//最后一舞
#include<bits/stdc++.h>
using namespace std;
#define out(x) cout << #x << '=' << (x) << endl
#define out2(x, y) cout << #x << '=' << (x) << ',' << #y << '=' << (y) << endl 
#define int long long
#define lc u<<1
#define rc u<<1|1
#define pb push_back
#define vt vector
#define fi first
#define se second
#define all(x) x.begin(), x.end()
#define PII pair<int,int>
#define endl "\n"
#define il inline
typedef unsigned long long ULL;
typedef long long ll;
il int read(){
	int x=0,f=1;char ch=getchar();
	while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
	while(ch>='0'&&ch<='9')x=(x<<3)+(x<<1)+(ch^48),ch=getchar();
	return x*f;
}
mt19937_64 rnd(time(0));
const ll inf = 0x3f3f3f3f3f3f3f3fLL;
const int infi = 0x3f3f3f3f;
const int P = 13331;
const int N = 200005;
int a,b,c;
int pw[19];
void solve(){
	cin >> a >> b >> c;
	bool f = 1;
	if(a < b) swap(a,b),f = 0;
	if(a + b < c || c < a){
		cout << "No" << endl;
		return;
	}
	cout << "Yes" << endl;
	int a1 = 0,b1 = 0;
	if(c==a+b){
		a1 =  4 * pw[a - 1];
		b1 = 4 * pw[b - 1] + 3; 
	}else{
		a1 = pw[a - 1];
		int d = a + b - c;
		int dd = b - d + 1;
		int t = 0;
		while(dd--) t=t*10+9;
		while(--d>=1) t=t*10;
		b1 = t;
		//cout << (t*pw[a-1])/__gcd(t,pw[a-1]) << endl;
	}
	if(!f) swap(a1,b1);
	cout << a1 << " " << b1 << endl;

}

signed main(){
	std::ios::sync_with_stdio(0);
    std::cin.tie(0);
    std::cout.tie(0);
	int times = 1;
	pw[0] = 1;
	for(int i = 1;i <= 18;i++) pw[i] = pw[i - 1] * 10;
	cin >> times;
	while(times--){
		solve();
	}
	return 0;
}