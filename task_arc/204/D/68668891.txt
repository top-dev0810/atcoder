#include<bits/stdc++.h>
using namespace std;
#define ll long long

vector<ll>ans;
bool ck(ll n, ll l, ll r){
    // from l to r-1 cannot remove
    // from r-l to n-1 need remove
    if(r-l<l||r-l>r-1)return 1;
    // overlapping:
    // r-l>=l, n-1>=r-1
    // overlap range = r-l to r-1
    // range length = l
    // r to n-1 is no overlap
    // n-r range of non-overlap
    // non-overlap must be strictly larger than the overlap for a solution to exist
    ll thing=n-r;
    thing--;
    ll lar=thing*(thing+1)/2;
    if(lar>=l)return 1;
    return 0;
}

void compat(ll l, ll r, ll n){
    //cout<<l<<' '<<r<<' '<<n<<endl;
    if(n-1-r>r-l+1){
        //cout<<l<<' '<<r<<' '<<n<<endl;
        while(n-1-r>r-l+2){
            ans.push_back(n-1);
            n--;
        }
        ans.push_back(r+1);
        for(int i=n-1;i>r+1;i--)ans.push_back(i);
        for(int i=r;i>=l;i--){
            ans.push_back(i);
        }
        return;
    }
    ans.push_back(r+1);
    for(int i=n-1;i>r+1;i--)ans.push_back(i);
    compat(l,r-(n-1-(r+2)+1),r+1);
}
void generate(ll n, ll l, ll r){
    if(l==0){
        while(n-1>=r){
            ans.push_back(n-1); n--;
        }
        return;
    }    
    if(r-l<l){
        while(n-1>=r){
            ans.push_back(n-1);n--;
        }
        ans.push_back(r-l);
        for(int i=n-1;i>r-l;i--)ans.push_back(i);
        return;
    }
    compat(r-l,r-1,n);
}

int main(){
    ios::sync_with_stdio(0);
    cin.tie(0); cout.tie(0);
    ll n,l,r;
    cin>>n>>l>>r;
    if(ck(n,l,r)){
        cout<<"Yes\n";
    }
    else{
        cout<<"No\n"; return 0;
    }
    generate(n,l,r);
    for(auto& u: ans){
        cout<<u<<" ";
    }
    cout<<'\n';
}