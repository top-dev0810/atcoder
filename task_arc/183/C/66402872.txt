#include <bits/stdc++.h>
#define int long long
using namespace std;
const int MOD = 998244353;
#ifdef int
#define inf 0x3f3f3f3f3f3f3f3f
#else
#define inf 0x3f3f3f3f
#endif
const long long infll = 0x3f3f3f3f3f3f3f3f;
#define pii pair<int, int>
#define mkp(x, y) make_pair(x, y)

#ifndef LOCAL
#define SUBMIT
#endif

#ifdef SUBMIT
#define endl '\n'
// #define cin Fastio ::cin
// #define cout Fastio ::cout
#endif

template <typename T>
void read(vector<T> &vec)
{
    for (auto &x : vec)
    {
        cin >> x;
    }
}

int qpow(int n, int k)
{
    int res = 1;
    while (k)
    {
        if (k & 1)
            (res *= n) %= MOD;
        (n *= n) %= MOD;
        k >>= 1;
    }
    return res;
}

int n, m;

int limit[510][510][510];

int lim[510][510];

int fac[1010],inv[1010];

int c(int n,int m)
{
    if(n<0||m<0||m>n)return 0;
    return fac[n]*inv[m]%MOD*inv[n-m]%MOD;
}

int dp[510][510];

void work()
{
    fac[0]=1;
    for(int i=1;i<=1000;i++)fac[i]=fac[i-1]*i%MOD;
    inv[1000]=qpow(fac[1000],MOD-2);
    for(int i=999;i>=0;i--)inv[i]=inv[i+1]*(i+1)%MOD;
    cin >> n >> m;
    memset(lim,0x3f,sizeof lim);
    for (int i = 1; i <= m; i++)
    {
        int x, y, z;
        cin >> x >> y >> z;
        lim[z][x] = min(lim[z][x], y);
    }
    for (int i = 1; i <= n; i++)
    {
        int fur = inf;
        for(int j=n;j>=1;j--)
        {
            fur=min(fur,lim[i][j]);
            for(int k=n;k>=fur;k--)limit[i][j][k]=1;
        }
    }
    // for(int i=1;i<=n;i++)
    // {
    //     for(int j=1;j<=n;j++)
    //     {
    //         for(int k=1;k<=n;k++)
    //         {
    //             cout<<limit[i][j][k]<<' ';
    //         }
    //         cout<<endl;
    //     }
    //     cout<<endl;
    // }
    for(int len=1;len<=n;len++)
    {
        for(int l=1,r=l+len-1;r<=n;l++,r++)
        {
            int res=0;
            for(int k=l;k<=r;k++)
            {
                if(limit[k][l][r])continue;
                res=(res+(c(r-l,k-l)*(k-1>=l?dp[l][k-1]:1)%MOD*(k+1<=r?dp[k+1][r]:1)%MOD))%MOD;
            }
            dp[l][r]=res;
        }
    }
    cout<<dp[1][n]<<endl;
}

signed main()
{
#ifndef cin
#ifdef SUBMIT
    ios::sync_with_stdio(0);
    cin.tie(0);
#endif
#endif
    int t = 1;
    // cin>>t;
    while (t--)
    {
        work();
    }
}
