#include<bits/stdc++.h>
using namespace std;

#define int ll
typedef long long ll;
typedef unsigned long long ull;

#define mk make_pair
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<double,double> pdd;

#define ReadIn(s) freopen(s,"r",stdin)
#define OutPut(s) freopen(s,"w",stdout)

#define btpcll(x) __builtin_popcountll(x)
#define btpc(x) __builtin_popcount(x)

#define eb emplace_back
#define sz(x) (int)(x.size())

template<typename T>
void read(T &x){
	x=0;char c=getchar();T neg=0;
	while(!isdigit(c)) neg|=!(c^'-'),c=getchar();
	while(isdigit(c)) x=(x<<3)+(x<<1)+(c^48),c=getchar();
	if(neg) x=(~x)+1;
}
template<typename T,typename ...Args>
void read(T &x,Args &...args) {
	read(x);read(args...);
}

const int M=3e5+10;
const int inf=0x3f3f3f3f3f3f3f3f;
const double eps=1e-10;
const int p=998244353;

inline int comp (double x,double y) {
	if(x-y>eps) return 1;
	if(y-x>eps) return -1;
	return 0;
}

bool Mst;
//in this

int expow(int x,int y) {
	int res=1;
	for(;y;y>>=1,x=x*x%p) if(y&1) res=res*x%p;
	return res;
}

int n,q;
int a[M];
int v[M];

int op[M];

int solve() {
	read(n,q);
	for(int i=1;i<=q;i++) {
		read(a[i],v[i]);
	} 
	
	for(int i=1;i<=q;i++) {
		for(int j=i+1;j<=q;j++) {
			if(v[i]>v[j]) {
				if(a[i]==a[j]) return 0;
				if(a[i]>a[j]) {
					if(op[i]&&op[i]!=2) return 0;
					if(op[j]&&op[j]!=1) return 0;
					op[i]=2;op[j]=1;
				}
				else {
					if(op[i]&&op[i]!=1) return 0;
					if(op[j]&&op[j]!=2) return 0;
					op[i]=1;op[j]=2;
				}
			}
		}
	}

	int ans=0;
	for(int i=1;i<=q;i++) ans+=!op[i];
	
	return expow(2,ans);
	
}

//
bool Med;

signed main() {
	
	cout<<solve();
	
	cerr<<"\n";
	cerr<<"Memory:"<<(&Mst-&Med)/1024.0/1024<<" MB\n";
	cerr<<"Time:"<<clock()/1.0/CLOCKS_PER_SEC*1000.0<<" ms\n";

	return 0;
}
