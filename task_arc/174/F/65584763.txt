#include<bits/stdc++.h>
#define ri register int
#define ll long long
#define mkp make_pair
#define int long long
using namespace std;
const int maxn=3e5+7;
int n;
int L[maxn],R[maxn];
int pre[maxn],nxt[maxn];
ll val[maxn];
int tot;
ll vvv[maxn];
signed main(){
	ios::sync_with_stdio(0);
	cin>>n;
	for(ri i=1;i<=n;i++)cin>>L[i]>>R[i];
	set<pair<ll,int> >qrl,qlr;
	ll lal=0,lar=0;
	pre[n+1]=n;nxt[n]=n+1;
	val[n+1]=L[n];
	qlr.insert(mkp(L[n],n));
	int lst=n;
	for(ri i=n-1;i;i--){
		lal+=L[i];lar+=R[i];
		while(qrl.size()&&(*qrl.begin()).first+lal-lar<=0){
			pair<ll,int>x=*qrl.begin();
			qrl.erase(x);
			int b=x.second;
			int a=pre[b],c=nxt[b];int d=nxt[c];
			if(!d){nxt[b]=0;continue;}
			qlr.erase(mkp(val[b]-val[a],a));
			qlr.erase(mkp(val[d]-val[c],c));
			pre[d]=a;nxt[a]=d;
			qlr.insert(mkp(val[d]-val[a],a));
		}
		swap(lal,lar);swap(qlr,qrl);
		val[i]=-lal;
		nxt[i]=lst;pre[lst]=i;
		qlr.insert(mkp(val[lst]-val[i],i));
		lst=i;
	}
	int now=1,o=0;
	while(now){
		vvv[++tot]=val[now]+(o?lar:lal);
		now=nxt[now];
		o^=1;
	}
	int Q;cin>>Q;
	while(Q--){
		ll C;cin>>C;
		int pos=upper_bound(vvv+1,vvv+1+tot,C)-vvv-1;
		if(pos==tot)cout<<"Draw\n";
		else cout<<(pos%2==0?"Alice\n":"Bob\n");
	}
	return 0;
}